package rulesBackward2;

import com.ftn.sbnz.model.ChampionLocation;
import com.ftn.sbnz.model.Champion;

query isAncestor( String x, String y )
    ChampionLocation( x, y; )
or
    (ChampionLocation( z, y; ) and isAncestor( x, z; ) )
end

query areSiblings(String x, String y)
    ChampionLocation(x, z;) and ChampionLocation(y, z;)
end

rule "ancestor"
activation-group "areConnectedGroup2"
when
    $aug1: Champion()
    $aug2: Champion(name != $aug1.name)
    isAncestor($aug1.name, $aug2.name; )
then
    System.out.println("They are connected, parent is=" + $aug2.getName() + ", child name is=" + $aug1.getName());
end

rule "siblings"
activation-group "areConnectedGroup2"
when
    $aug1: Champion()
    $aug2: Champion(name != $aug1.name)
    areSiblings($aug1.name, $aug2.name; )
then
    System.out.println("They are connected, sibling one is=" + $aug2.getName() + ", sibling two is=" + $aug1.getName());
end
